[;]
[; Parser]
[;]
[define [nextc] [set c [getch]]]
[nextc]
[define
    [getnext]
    [locals result elem quote]
    [set result [array]]
    [while [string_contains ' \n\r\t' c] [nextc]]
    [cond
        [[eq? c '[']
            [nextc]
            [set elem [getnext]]
            [while
                [not [eq? elem false]]
                [array_push result elem]
                [set elem [getnext]]]
            [return result]]
        [[eq? c ']'] [nextc] [return false]]
        [[eq? c '\'']
            [nextc]
            [while
                [not [eq? c '\'']]
                [cond
                    [[eq? c '\\']
                        [nextc]
                        [cond
                            [[eq? c 'n'] [set c '\n']]
                            [[eq? c 'r'] [set c '\r']]
                            [[eq? c 't'] [set c '\t']]]]]
                [array_push result c]
                [nextc]]
            [nextc]
            [return [array 'str' [array_join result '']]]]
        [[string_contains '0123456789' c]
            [while
                [string_contains '0123456789' c]
                [array_push result c]
                [nextc]]
            [return [array 'num' [array_join result '']]]]
        [else
            [while
                [not [string_contains ' \n\r\t[]' c]]
                [array_push result c]
                [nextc]]
            [return [array_join result '']]]]]
[;]
[; Compiler]
[;]
[; ... TODO ...]
[;]
[; Main loop]
[;]
[set expr [getnext]]
[while
    [not [eq? expr false]]
    [print [listpp expr]]
    [set expr [getnext]]]
